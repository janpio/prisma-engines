on:
  workflow_dispatch:
    inputs:
      commit:
        description: "Commit on the given branch to build"
        required: true

jobs:
  build:
    name: "MacOS ARM64 (Apple Silicon) engines build on branch ${{ github.event.ref }} for commit ${{ github.event.inputs.commit }}"
    env:
      SQLITE_MAX_VARIABLE_NUMBER: 250000
      SQLITE_MAX_EXPR_DEPTH: 10000
    runs-on: macos-latest
    
    steps:
      - name: Output link to real commit
        run: echo ${{ github.repository }}/commit/${{ github.event.inputs.commit }}

      - name: Checkout ${{ github.event.inputs.commit }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - name: Install aarch64 toolchain
        run: rustup target add aarch64-apple-darwin
        
#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: xcodebuild -showsdks
      - run: ls /Library/Developer/CommandLineTools/SDKs/
      - run: sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - run: ls /Library/Developer/CommandLineTools/SDKs/

      - run: | 
          SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path)
          MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version)
          cargo build --target=aarch64-apple-darwin --release

      - run: ls ${{ github.workspace }}/target/release/
      
#      - uses: actions/upload-artifact@v2
#        with:
#          name: binaries
#          path: |
#            ${{ github.workspace }}/target/release/*.exe
#            ${{ github.workspace }}/target/release/*.dll
